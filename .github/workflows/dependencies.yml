name: Upgrade Service Dependencies

on:
  schedule:
    - cron:  '0 6 * * 3'

jobs:
  check-dependency-upgrades:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      ORG_GRADLE_PROJECT_artifactory_user: ${{ secrets.EXEC_ECOM_ARTIFACTORY_USERNAME }}
      ORG_GRADLE_PROJECT_artifactory_password: ${{ secrets.EXEC_ECOM_ARTIFACTORY_PASSWORD }}
      PR_TOKEN: ${{ secrets.EXEC_ECOM_DEPLOYMENTS_PAT }}
      GIT_AUTHOR: Dependency Update
      GIT_EMAIL: github-action-pr-bot@github.com
    steps:
      - name: Checkout service source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run gradle dependency upgrade task
        run: ./gradlew useLatestVersions

      # If git detects changes, steps.check-for-diff.outputs.GIT_STATUS will not be empty.
      - name: Check for diff in dependencies
        id: check-for-diff
        run: |
          echo ::set-output name=GIT_STATUS::$(git status --porcelain=1)

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      # If changes are present, git them to a branch.  This step will commit modifications and add new files, too.
      - name: Commit version upgrades
        if: steps.check-for-diff.outputs.GIT_STATUS != ''
        uses: EndBug/add-and-commit@v4.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.EXEC_ECOM_DEPLOYMENTS_PAT }}
        with:
          author_name: ${{ env.GIT_AUTHOR }}
          author_email: ${{ env.GIT_EMAIL }}
          message: Upgrade to latest dependencies ${{ steps.date.outputs.date }}
          ref: feature/dependency-upgrades-${{ steps.date.outputs.date }}

      # Create PR for new dependency updates
      - name: Create PR for dependency updates
        if: steps.check-for-diff.outputs.GIT_STATUS != ''
        uses: actions/github-script@v2.0.1
        with:
          github-token: ${{ env.PR_TOKEN }}
          script: |
            const pr = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Dependency Updates - ${{ steps.date.outputs.date }}',
              head: 'feature/dependency-upgrades-${{ steps.date.outputs.date }}',
              base: 'master'
            });
            return pr.url;
