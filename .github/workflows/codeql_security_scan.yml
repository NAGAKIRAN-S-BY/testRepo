name: Code QL Scan
on:
  push:
    branches: [ master ]
  pull_request:
  schedule:
    - cron: '30 11 * * 6'

env:
  ORG_GRADLE_PROJECT_artifactory_user: ${{ secrets.EXEC_ECOM_ARTIFACTORY_USERNAME }}
  ORG_GRADLE_PROJECT_artifactory_password: ${{ secrets.EXEC_ECOM_ARTIFACTORY_PASSWORD }}
  GITHUB_ISSUE_NUMBER: ${{ github.event.number }}
  GITHUB_REPO: ${{ github.event.repository.name }}
  SERVICE_NAME: exec-ud-daas-etl-service
  
jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      actions: write
      contents: read
      security-events: write
      pull-requests: write 

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]

    steps:
    
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
  
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
          config-file: ./.github/codeql/codeql-configuration.yml
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)

      - name: CodeQL AutoBuild
        uses: github/codeql-action/autobuild@v1

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
        
      - name: Detect Errors
        if: github.event_name == 'pull_request'
        run: |
           CODE_SCANNING_URL="https://github.com/JDA-Product-Development/exec-ecom-$SERVICE_NAME/security/code-scanning"
           path="/home/runner/work/exec-ecom-$SERVICE_NAME/results"
           results=$(cat  $path/${{ matrix.language }}.sarif| jq -r '.runs[].results[].ruleId')
           resultsArray=($results)
           errorCount=0
           warningCount=0
           for var in "${resultsArray[@]}"
           do
             severity=$(cat $path/${{ matrix.language }}.sarif | jq -r '.runs[].tool.extensions[]|select(.rules != null).rules[]|select(.id=="'$var'").properties."problem.severity"')
             if [ "$severity" == "warning" ]; then let warningCount+=1; fi
             if [ "$severity" == "error" ]; then let errorCount+=1; fi
           done
           echo "Error Count: $errorCount"
           echo "Warning Count: $warningCount"
           echo 'ERROR<<EOF' >> $GITHUB_ENV
           echo "$errorCount" >> $GITHUB_ENV
           echo 'EOF' >> $GITHUB_ENV
           echo 'WARNING<<EOF' >> $GITHUB_ENV
           echo "$warningCount" >> $GITHUB_ENV
           echo 'EOF' >> $GITHUB_ENV
           echo "codeql_description= Please check code scanning alerts for detailed analysis: $CODE_SCANNING_URL" >> $GITHUB_ENV
           
      - name: Post CodeQl Scan On PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `Codeql Scan Results:
            \`\`\`
            Fields    |  No. Of Alerts
            -----------------------------
            Error     |  ${{ env.ERROR }}
            Warning   |  ${{ env.WARNING }}
            \`\`\`
            ${{env.codeql_description}}
            `;
              github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
    
